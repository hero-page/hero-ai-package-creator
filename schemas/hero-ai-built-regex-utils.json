{"packages":[{"name":"hero-ai-built-regex-utils","description":"A set of functions for working with regular expressions, such as finding and replacing text patterns and validating user input.","functions":[{"function_name":"regexFind","function_summary":"Searches for a specific pattern in a given text using regular expressions and returns its position/index. Test cases include various strings containing the pattern and edge cases such as empty strings or patterns. For instance, it should return the index of 'abc' in 'xyzabc123', handle edge cases like empty strings or patterns, and ignore case sensitivity."},{"function_name":"regexReplace","function_summary":"Replaces all instances of a specific pattern in a given text with a new value using regular expressions. Test cases include replacing simple and complex patterns and various replacements, including empty strings. For instance, it should replace all occurrences of 'abc' with 'def' in 'abc123abc456abc', handle edge cases like empty strings or patterns, and ignore case sensitivity."},{"function_name":"regexMatch","function_summary":"Checks if a specific pattern is present in a given text using regular expressions and returns a boolean value. Test cases include checking for the presence of patterns in various strings and edge cases such as empty strings or patterns. For instance, it should return true if 'abc' is present in 'xyzabc123', handle edge cases like empty strings or patterns, and ignore case sensitivity."},{"function_name":"regexValidate","function_summary":"Validates a given text according to a specific pattern using regular expressions and returns a boolean value. Test cases include validating user inputs such as email addresses, phone numbers, and passwords, and handling edge cases such as empty strings or patterns. For instance, it should return true if a given email address follows the correct format, handle edge cases like empty strings or patterns, and ignore case sensitivity."},{"function_name":"regexCapture","function_summary":"Captures and returns groups matched by a specific pattern in a given text using regular expressions. Test cases include capturing multiple groups in different positions within the text, and handling edge cases such as empty strings or patterns. For instance, it should return all groups of digits in 'abc123def456ghi789', handle edge cases like empty strings or patterns, and ignore case sensitivity."},{"function_name":"regexSplit","function_summary":"Splits a given text into an array of substrings based on a specific pattern using regular expressions. Test cases include splitting text with different delimiters and handling edge cases such as empty strings or patterns. For instance, it should split 'abc,123,def,456,ghi,789' into an array based on the comma delimiter, handle edge cases like empty strings or patterns, and ignore case sensitivity."}]}]}